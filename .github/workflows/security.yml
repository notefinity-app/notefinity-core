name: Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run security scan daily at 2:00 AM UTC
    - cron: '0 2 * * *'

jobs:
  security:
    name: Security Analysis
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        if: env.SNYK_TOKEN != ''
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

      - name: Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always() && env.SNYK_TOKEN != ''
        with:
          sarif_file: snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Install ESLint and security plugins
        run: |
          echo "Attempting to install ESLint for security scanning..."
          npm install --no-save eslint @microsoft/eslint-formatter-sarif 2>/dev/null || echo "ESLint installation failed, will skip security scanning"
        continue-on-error: true

      - name: Run ESLint Security Rules
        run: |
          # Create a valid empty SARIF file as default
          cat > eslint-results.sarif << 'EOF'
          {
            "version": "2.1.0",
            "runs": []
          }
          EOF
          
          # Try to run ESLint if available
          if command -v npx &> /dev/null; then
            if npx eslint --version &> /dev/null; then
              echo "Running ESLint security analysis..."
              npx eslint . --ext .js,.ts --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif 2>/dev/null || echo "ESLint completed with issues"
            else
              echo "ESLint not properly installed, using empty SARIF file"
            fi
          else
            echo "npx not available, using empty SARIF file"
          fi
        continue-on-error: true

      - name: Check if SARIF file exists and upload
        run: |
          if [ -f "eslint-results.sarif" ] && [ -s "eslint-results.sarif" ]; then
            echo "SARIF file exists and is not empty, will upload"
            echo "UPLOAD_SARIF=true" >> $GITHUB_ENV
          else
            echo "SARIF file missing or empty, skipping upload"
            echo "UPLOAD_SARIF=false" >> $GITHUB_ENV
          fi

      - name: Upload ESLint results
        uses: github/codeql-action/upload-sarif@v3
        if: env.UPLOAD_SARIF == 'true'
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
