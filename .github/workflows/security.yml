name: Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run security scan daily at 2:00 AM UTC
    - cron: '0 2 * * *'

jobs:
  security:
    name: Security Analysis
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          # Workaround for npm optional dependencies bug with Rollup
          # https://github.com/npm/cli/issues/4828
          if ! npm ci; then
            echo "npm ci failed, trying workaround for optional dependencies..."
            rm -rf node_modules package-lock.json
            npm install
          fi

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        if: env.SNYK_TOKEN != ''
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

      - name: Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always() && env.SNYK_TOKEN != ''
        with:
          sarif_file: snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Install ESLint and security plugins
        run: |
          echo "Attempting to install ESLint for security scanning..."
          npm install --no-save eslint @microsoft/eslint-formatter-sarif 2>/dev/null || echo "ESLint installation failed, will skip security scanning"
        continue-on-error: true

      - name: Run ESLint Security Rules
        run: |
          echo "ESLINT_RAN=false" >> $GITHUB_ENV

          # Try to run ESLint if available
          if command -v npx &> /dev/null; then
            if npx eslint --version &> /dev/null; then
              echo "Running ESLint security analysis..."
              # Use the same linting scope as local development to ensure consistency
              if npx eslint src/**/*.ts --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif 2>/dev/null; then
                echo "ESLint completed successfully"
                echo "ESLINT_RAN=true" >> $GITHUB_ENV
              else
                echo "ESLint found issues or failed, checking if SARIF was created..."
                if [ -f "eslint-results.sarif" ] && [ -s "eslint-results.sarif" ]; then
                  echo "ESLint created SARIF file with results"
                  echo "ESLINT_RAN=true" >> $GITHUB_ENV
                else
                  echo "ESLint failed to create valid SARIF file"
                fi
              fi
            else
              echo "ESLint not properly installed, skipping security scanning"
            fi
          else
            echo "npx not available, skipping security scanning"
          fi
        continue-on-error: true

      - name: Check SARIF file and prepare upload
        run: |
          if [ "$ESLINT_RAN" = "true" ] && [ -f "eslint-results.sarif" ]; then
            # Check if SARIF file has valid content
            if grep -q '"runs"' eslint-results.sarif && [ -s "eslint-results.sarif" ]; then
              # Check if it's not just empty runs array
              if grep -q '"results"' eslint-results.sarif || grep -q '"rules"' eslint-results.sarif; then
                echo "SARIF file contains valid security scan results"
                echo "UPLOAD_SARIF=true" >> $GITHUB_ENV
              else
                echo "SARIF file exists but contains no security findings"
                echo "UPLOAD_SARIF=false" >> $GITHUB_ENV
              fi
            else
              echo "SARIF file exists but appears invalid"
              echo "UPLOAD_SARIF=false" >> $GITHUB_ENV
            fi
          else
            echo "No ESLint results to upload"
            echo "UPLOAD_SARIF=false" >> $GITHUB_ENV
          fi

      - name: Upload ESLint results
        uses: github/codeql-action/upload-sarif@v3
        if: env.UPLOAD_SARIF == 'true'
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
